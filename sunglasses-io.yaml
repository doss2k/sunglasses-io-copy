swagger: '2.0'
info:
  title: Sunglasses-IO API
  description: An API to support the Sunglasses-IO platform
  version: 1.0.0
host: localhost:3001
schemes:
  - https
basePath: /api
produces:
  - application/json
paths:
  /brands:
    get:
      summary: All available brands
      description: |
        This endpoint returns all of the available brands of sunglasses
      tags:
        - Brands
      responses:
        '200':
          description: An array of brand objects
          schema:
            type: array
            items:
              $ref: '#/definitions/Brand'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /brands/:id/products:
    get:
      summary: All products of a specific brand
      description: |
        This endpoint returns all of the available products for a specified brand ID
      parameters:
        - name: id
          in: path
          description: The id of the brand to return products for
          required: true
          type: string    
      tags:
        - Products
      responses:
        '200':
          description: An array of product objects
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        '404':
          description: No products found for that brand ID      
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'          
  /products:
    get:
      summary: All available products
      description: |
        The Products endpoint returns all of the available products for sale
      parameters:
        - name: query
          in: path
          description: The search query from a user
          required: true
          type: string       
      tags:
        - Products
      responses:
        '200':
          description: An array of product objects
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /login:
    post:
      summary: Logs user into the system
      description: |
        Logs user into the system with a username and password
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          type: string
        - name: password
          in: query
          description: The password for login
          required: true
          type: string  
      tags:
        - Login
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid username/password supplied
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'  
  /me/cart:
    get:
      summary: The users shopping cart
      description: |
        This endpoint returns all of the products in a users cart
      tags:
        - Cart
      responses:
        '200':
          description: An array of cart objects
          schema:
            type: array
            items:
              $ref: '#/definitions/Cart'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'    
    put:
      summary: Update quantity of cart
      description: |
        This endpoint allows a user to change the quantity of items in their cart
      tags:
        - Cart
      responses:
        '200':
          description: Successfully updated cart          
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me/cart/:productId:
    post:
      summary: Add item to cart
      description: |
        This endpoint adds a product to a users cart
      parameters:
        - name: productId
          in: path
          description: The id of the product to add to the cart
          required: true
          type: string    
      tags:
        - Cart
      responses:
        '200':
          description: Add item to cart succesfull          
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error' 
    delete:
      summary: Delete item from cart
      description: |
        This endpoint removes a product from a users cart
      parameters:
        - name: productId
          in: path
          description: The id of the product to remove from the cart
          required: true
          type: string    
      tags:
        - Cart
      responses:
        '200':
          description: Item deleted from cart succesfully          
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'                                                                    
definitions:
  Brand:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for a brand.
      name:
        type: string
        description: The name of the brand
  Product:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for a product.
      categoryId:
        type: string
        description: Identifier for the brand of the product, this should match the brand id value
      name:
        type: string
        description: The name of the product
      description:
        type: string
        description: The description of the product
      price:
        type: number
        description: The sale price of a product
      imageUrls:
        type: string
        description: URLs for images of the product
  Cart:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for a product.
      categoryId:
        type: string
        description: Identifier for the brand of the product, this should match the brand id value
      name:
        type: string
        description: The name of the product      
      price:
        type: number
        description: The sale price of a product
      quantity:
        type: number
        description: The amount of the product in the cart         
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string